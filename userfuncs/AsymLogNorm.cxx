/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

// class declaration include file below retrieved from workspace code storage
#include "AsymLogNorm.h"
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(AsymLogNorm) 

 AsymLogNorm::AsymLogNorm(const char *name, const char *title, 
                        RooAbsReal& _beta_nsig,
                        RooAbsReal& _nsig_kappa_neg,
                        RooAbsReal& _nsig_kappa_pos) :
   RooAbsReal(name,title), 
   beta_nsig("beta_nsig","beta_nsig",this,_beta_nsig),
   nsig_kappa_neg("nsig_kappa_neg","nsig_kappa_neg",this,_nsig_kappa_neg),
   nsig_kappa_pos("nsig_kappa_pos","nsig_kappa_pos",this,_nsig_kappa_pos)
 { 
 } 


 AsymLogNorm::AsymLogNorm(const AsymLogNorm& other, const char* name) :  
   RooAbsReal(other,name), 
   beta_nsig("beta_nsig",this,other.beta_nsig),
   nsig_kappa_neg("nsig_kappa_neg",this,other.nsig_kappa_neg),
   nsig_kappa_pos("nsig_kappa_pos",this,other.nsig_kappa_pos)
 { 
 } 



 Double_t AsymLogNorm::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return beta_nsig<0?pow(nsig_kappa_neg,beta_nsig):pow(nsig_kappa_pos,beta_nsig) ; 
 } 



