/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "ZPrimeEleBkgPdf2.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(ZPrimeEleBkgPdf2) 

 ZPrimeEleBkgPdf2::ZPrimeEleBkgPdf2(const char *name, const char *title, 
                        RooAbsReal& _mass,
                        RooAbsReal& _bkg_a,
                        RooAbsReal& _bkg_b,
                        RooAbsReal& _bkg_c,
                        RooAbsReal& _bkg_d,
                        RooAbsReal& _bkg_e,                       
			RooAbsReal& _bkg_a2,
                        RooAbsReal& _bkg_b2,
                        RooAbsReal& _bkg_c2,
                        RooAbsReal& _bkg_d2,
                        RooAbsReal& _bkg_e2,
                        RooAbsReal& _bkg_syst_a,
                        RooAbsReal& _bkg_syst_b) :
   RooAbsPdf(name,title), 
   mass("mass","mass",this,_mass),
   bkg_a(" bkg_a"," bkg_a",this,_bkg_a),
   bkg_b(" bkg_b"," bkg_b",this,_bkg_b),
   bkg_c(" bkg_c"," bkg_c",this,_bkg_c),
   bkg_d(" bkg_d"," bkg_d",this,_bkg_d),
   bkg_e(" bkg_e"," bkg_e",this,_bkg_e),  
   bkg_a2(" bkg_a2"," bkg_a2",this,_bkg_a2),
   bkg_b2(" bkg_b2"," bkg_b2",this,_bkg_b2),
   bkg_c2(" bkg_c2"," bkg_c2",this,_bkg_c2),
   bkg_d2(" bkg_d2"," bkg_d2",this,_bkg_d2),
   bkg_e2(" bkg_e2"," bkg_e2",this,_bkg_e2),
   bkg_syst_a(" bkg_syst_a"," bkg_syst_a",this,_bkg_syst_a),
   bkg_syst_b(" bkg_syst_b"," bkg_syst_b",this,_bkg_syst_b)
 { 
 } 


 ZPrimeEleBkgPdf2::ZPrimeEleBkgPdf2(const ZPrimeEleBkgPdf2& other, const char* name) :  
   RooAbsPdf(other,name), 
   mass("mass",this,other.mass),
    bkg_a("bkg_a",this,other.bkg_a),
    bkg_b("bkg_b",this,other.bkg_b),
    bkg_c("bkg_c",this,other.bkg_c),
    bkg_d("bkg_d",this,other.bkg_d),
    bkg_e("bkg_e",this,other.bkg_e),  
    bkg_a2("bkg_a2",this,other.bkg_a2),
    bkg_b2("bkg_b2",this,other.bkg_b2),
    bkg_c2("bkg_c2",this,other.bkg_c2),
    bkg_d2("bkg_d2",this,other.bkg_d2),
    bkg_e2("bkg_e2",this,other.bkg_e2),
    bkg_syst_a("bkg_syst_a",this,other.bkg_syst_a),
    bkg_syst_b("bkg_syst_b",this,other.bkg_syst_b)
 { 
 } 



 Double_t ZPrimeEleBkgPdf2::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   // 
   if (mass <= 600){
   	return bkg_a*exp(mass*bkg_b+mass*mass*bkg_c+mass*mass*mass*bkg_d)*pow(mass,bkg_e)*(bkg_syst_a + bkg_syst_b*mass);
   }
   else{
	return bkg_a2*exp(mass*bkg_b2+mass*mass*bkg_c2+mass*mass*mass*bkg_d2)*pow(mass,bkg_e2)*(bkg_syst_a + bkg_syst_b*mass);
   }
 } 
