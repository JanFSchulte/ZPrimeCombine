/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

// class declaration include file below retrieved from workspace code storage
#include "ZPrimeEleResFunc.h"
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(ZPrimeEleResFunc) 

 ZPrimeEleResFunc::ZPrimeEleResFunc(const char *name, const char *title, 
			RooAbsReal& _res_scale,
                        RooAbsReal& _res_s,
                        RooAbsReal& _peak,
                        RooAbsReal& _res_n,
                        RooAbsReal& _res_c,
                        RooAbsReal& _res_slope) :
   RooAbsReal(name,title), 
   res_scale("res_scale","res_scale",this,_res_scale),
   res_s("res_s","res_s",this,_res_s),
   peak("peak","peak",this,_peak),
   res_n("res_n","res_n",this,_res_n),
   res_c("res_c","res_c",this,_res_c),
   res_slope("res_slope","res_slope",this,_res_slope)
 { 
 } 


 ZPrimeEleResFunc::ZPrimeEleResFunc(const ZPrimeEleResFunc& other, const char* name) :  
   RooAbsReal(other,name), 
   res_scale("res_scale",this,other.res_scale),
   res_s("res_s",this,other.res_s),
   peak("peak",this,other.peak),
   res_n("res_n",this,other.res_n),
   res_c("res_c",this,other.res_c),
   res_slope("res_slope",this,other.res_slope)
 { 
 } 



 Double_t ZPrimeEleResFunc::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   return res_scale*0.01*(sqrt(res_s*res_s/peak+res_n*res_n/peak/peak+res_c*res_c)+res_slope*peak) ; 
 } 



